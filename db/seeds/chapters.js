
exports.seed = function(knex) {
  return knex('chapters').del()
    .then(function () {
      return knex('chapters ').insert([
        { id: 1, cid: 1, description: 'In Javascript, there are five basic, or primitive, types of data. The five most basic types of data are strings, numbers, booleans, undefined, and null. We refer to these as primitive data types. A single variable can only store a single type of data. That means it’s important for you to learn to store the data correctly.',chapterno:'1' },
        { id: 2, cid: 1, description: 'The <script> tag is what we use to includes our JavaScript. It is a lot like the <link> tag you have already been using to include your CSS files.\n-- Here is a very basic snippet of JavaScript using the script tag. This JavaScript is written directly into our HTML page. It will call and alert box as soon as the page loads.',chapterno:'2' },
        { id: 3, cid: 1, description: 'JavaScript is case sensitive. ... Always remember everything within <script type=\"text/javascript\">and <script> tags (which are HTML tags) are case sensitive. Whitespace. In general, whitespace is not visible on the screen, including spaces, tabs and newline characters',chapterno:'3' },
        { id: 4, cid: 2, description: 'Variables declared inside a method are called local variables. Local variables can only be used within the method body. ... Each method declares num, but they are different variables.',chapterno:'1' },
        { id: 5, cid: 2, description: 'In a class, there can be several methods with the same name. However they must have a different signature. The signature of a method is comprised of its name, its parameter types and the order of its parameters. The signature of a method is not comprised of its return type nor its visibility nor the exceptions it may throw. The practice of defining two or more methods within the same class that share the same name but have different parameters is called overloading methods',chapterno:'2'},
        { id: 6, cid: 2, description: 'Abstract class is a special type of class which cannot be instantiated and acts as a base class for other classes. Abstract class members marked as abstract must be implemented by derived classes.\n\nThe purpose of an abstract class is to provide basic or default functionality as well as common functionality that multiple derived classes can share and override.\n\nFor example, a class library may define an abstract class that is used as a parameter to many of its functions, and require programmers using that library to provide their own implementation of the class by creating a derived class. In C#, System.IO.FileStream is an implementation of the System.IO.Stream abstract class.',chapterno:'3' },
        { id: 7, cid: 3, description: 'Alan Kay coined the term “object oriented programming” at grad school in 1966 or 1967. The big idea was to use encapsulated mini-computers in software which communicated via message passing rather than direct data sharing — to stop breaking down programs into separate “data structures” and “procedures”.\n“The basic principal of recursive design is to make the parts have the same power as the whole.” ~ Bob Barton, the main designer of the B5000, a mainframe optimized to run Algol-60.',chapterno:'1' },
        { id: 8, cid: 3, description: 'Object-oriented programming has four basic concepts: encapsulation, abstraction, inheritance, and polymorphism. Even if these concepts seem incredibly complex, understanding the general framework of how they work will help you understand the basics of an OOP computer program. ',chapterno:'2' },
        { id: 9, cid: 3, description: 'Inheritance is the procedure in which one class inherits the attributes and methods of another class. The class whose properties and methods are inherited is known as the Parent class. And the class that inherits the properties from the parent class is the Child class.\n\nThe interesting thing is, along with the inherited properties and methods, a child class can have its own properties and methods.',chapterno:'3' },
        { id: 10, cid: 4, description: 'Amazon Web Services (AWS) is the world’s most comprehensive and broadly adopted cloud platform, offering over 200 fully featured services from data centers globally. Main AWS web services are Amazon EC2,Amazon RDS, Amazon Simple Storage Service (S3),Amazon Cloudfront, Amazon VPC,Amazon SNS,AWS Beanstalk,AWS Lambda,AWS Autoscaling, AWS Elastic Cache.',chapterno:'1' },
        { id: 11, cid: 4, description: 'AWS Lambda officially supports several programming languages. In addition to the officially supported list of AWS lambda languages, AWS also provides a Runtime API which allows you to use additional programming languages to author your functions. This means that you may use PHP, for example, by compiling it to a Linux environment compatible with the Lambda environment.',chapterno:'2'},
        { id: 12, cid: 4, description: 'AWS Lambda is an event-driven, serverless computing platform provided by Amazon as a part of Amazon Web Services. It is a computing service that runs code in response to events and automatically manages the computing resources required by that code. It was introduced in November 2014',chapterno:'3'},
        { id: 13, cid: 5, description: 'Writing to a file is another of the basic programming tasks that one usually needs to know about - luckily, this task is very simple in Node.js. We can use the handy writeFile method inside the standard library is fs module, which can save all sorts of time and trouble.',chapterno:'1' },
        { id: 14, cid: 5, description: 'Node. js includes fs module to access physical file system. The fs module is responsible for all the asynchronous or synchronous file I/O operations. Let is see some of the common I/O operation examples using fs module.',chapterno:'2'},
        { id: 15, cid: 5, description: 'Express is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile applications. It facilitates the rapid development of Node based Web applications.',chapterno:'3'},
        { id: 16, cid: 6, description: 'MongoDB is a document-oriented NoSQL database used for high volume data storage. Instead of using tables and rows as in the traditional relational databases, MongoDB makes use of collections and documents. ... Collections contain sets of documents and function which is the equivalent of relational database tables.',chapterno:'1' },
        { id: 17, cid: 6, description: 'MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License (SSPL).',chapterno:'2'},
        { id: 18, cid: 6, description: 'MongoDB’s first version of the database shipped in August 2009. The 1.0 release and those that followed shortly after were focused on validating a new and largely unproven approach to database design – built on a document-oriented data model and layered onto an elastic and distributed systems foundation. Those early MongoDB releases attracted masses of adoption across startups and enterprises alike.\n\nWith early usage validating product/developer fit, the MongoDB engineering team’s focus shifted to Industrializing the system beyond a niche NoSQL database into a general purpose data platform capable of serving a broad range of modern, mission-critical applications.',chapterno:'3'}
      ]);
    });
};

// This table has the course content chapter descriptions of all courses. 'cid' refers to 'course id' which is the primary key of
// the 'courses' table.

// id -> PRIMARY KEY of the table
// cid -> FOREIGN KEY refering to courses(id)
// description -> Chapter description 